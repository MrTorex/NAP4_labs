1. Что называется классом?

Класс — это шаблон или описание для создания объектов в объектно-ориентированном программировании. Класс определяет структуру данных (поля) и поведение (методы), которые будут присущи объектам этого класса. Класс можно рассматривать как новый тип данных, который объединяет в себе данные и функции для работы с этими данными.

Пример:

class Circle {
    private double x; // абсцисса центра
    private double y; // ордината центра
    private double r; // радиус
}

Здесь Circle — это класс, который описывает окружность с координатами центра и радиусом.

2. Перечислите члены класса.

Членами класса являются:

Поля (свойства) — переменные, которые хранят данные объекта. Например:

private String lastName; // фамилия служащего
private double salary;   // зарплата
private boolean hasChildren; // наличие детей

Методы — функции, которые определяют поведение объекта. Они могут работать с данными объекта (полями) или выполнять другие действия. Например:

public void printEmployeeInfo() {
    System.out.println("Фамилия: " + lastName);
    System.out.println("Зарплата: " + salary);
    System.out.println("Наличие детей: " + (hasChildren ? "Да" : "Нет"));
}

Конструкторы — специальные методы, которые вызываются при создании объекта. Они инициализируют поля объекта. 
Например:

public Employee(String lastName, double salary, boolean hasChildren) {
    this.lastName = lastName;
    this.salary = salary;
    this.hasChildren = hasChildren;
}

3. Что нужно сделать для получения объектов класса?

Для получения объектов класса необходимо выполнить два шага:

Объявить переменную типа класса. Это переменная, которая будет ссылаться на объект. Например:

Employee emp1;

Создать объект с помощью оператора new. Оператор new выделяет память для объекта и вызывает конструктор для его инициализации. Например:

emp1 = new Employee("Иванов", 50000, true);

Эти шаги можно объединить в одну строку:

Employee emp1 = new Employee("Иванов", 50000, true);

4. Что произойдет, если в классе описан хотя бы один конструктор с параметрами?

Если в классе описан хотя бы один конструктор с параметрами, то конструктор по умолчанию (без параметров) автоматически не создается. Это означает, что если вы попытаетесь создать объект без передачи параметров, компилятор выдаст ошибку.

Пример:

class Employee {
    public Employee(String lastName, double salary) {
        // Конструктор с параметрами
    }
}

Employee emp = new Employee(); // Ошибка! Конструктор по умолчанию не существует
Чтобы избежать ошибки, нужно либо явно описать конструктор по умолчанию, либо всегда использовать конструктор с параметрами:

class Employee {
    public Employee() {
        // Конструктор по умолчанию
    }

    public Employee(String lastName, double salary) {
        // Конструктор с параметрами
    }
}

Теперь можно создавать объекты как с параметрами, так и без них:

Employee emp1 = new Employee(); // Работает
Employee emp2 = new Employee("Иванов", 50000); // Работает